type Product {
  id: ID!
  name: String!
  description: String
  price: Float!
}

type CartItem {
  id: ID!
  name: String!
  price: Float!
  quantity: Float!
}

type Cart {
  id: ID!
  items: [CartItem]
  totalprice: Float!
}

type DeletedResourceResponse {
  deletedId: ID
  success: Boolean
}

type Query {
  getCartById(cartId: ID!): Cart
  # getItemById(itemId: ID!): Item?
}

type Mutation {
  createCart: Cart!
  addItemToCart(cartId: ID!, productId: ID!): Cart!
  createProduct(name: String!, description: String, price: Float!): Product!
  removeItemFromCart(cartId: ID!, cartItemId: ID!): Cart!
  deleteCart(cartId: ID!): DeletedResourceResponse
}

# input CreateCartInput {
#   items: [Item]
# }

# input AddToCartInput {
#   cartId: ID
#   item: Item
# }

# input removeItemFromCart {
#   cartId: ID
#   itemid: ID
# }

# input CartItemInput {
#   id: ID
#   price: Float
#   quantity: Float
# }
